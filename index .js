import { Telegraf } from 'telegraf';
import { GoogleSpreadsheet } from 'google-spreadsheet';
import fetch from 'node-fetch';
import dotenv from 'dotenv';
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

dotenv.config();

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Telegram bot
const bot = new Telegraf(process.env.BOT_TOKEN);

// Google Sheets setup
const creds = JSON.parse(fs.readFileSync(path.join(__dirname, 'n8n-assistant-465403-835ca294442f.json')));
const doc = new GoogleSpreadsheet('1q4GCoGWB5TY0_SlZdc6kO1WaPT1byvtV'); // ID —Ç–≤–æ–µ–π —Ç–∞–±–ª–∏—Ü—ã

async function addTaskToSheet(user, message, isFromAI = false) {
  try {
    await doc.useServiceAccountAuth(creds);
    await doc.loadInfo();
    const sheet = doc.sheetsByTitle['CEO']; // –ù–∞–∑–≤–∞–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏
    await sheet.addRow({
      Date: new Date().toLocaleString(),
      From: isFromAI ? 'AI' : user,
      Message: message
    });
  } catch (error) {
    console.error('Error writing to sheet:', error);
  }
}

// OpenRouter (DeepSeek) ‚Äî AI –æ—Ç–≤–µ—Ç
async function askAI(prompt) {
  try {
    const response = await fetch('https://openrouter.ai/api/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${process.env.OPENROUTER_API_KEY}`,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        model: 'deepseek-chat',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.7
      })
    });

    const data = await response.json();
    return data.choices?.[0]?.message?.content || '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...';
  } catch (error) {
    console.error('AI error:', error);
    return '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ AI.';
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('text', async (ctx) => {
  const user = ctx.from.first_name || 'User';
  const message = ctx.message.text;

  // –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ /start
  if (message === '/start') {
    ctx.reply('üëã AI-CEO –æ–Ω–ª–∞–π–Ω. –ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ, –∏ —è –ø—Ä–µ–¥–ª–æ–∂—É –∑–∞–¥–∞—á–∏ –∏–ª–∏ –ø–æ–º–æ–≥—É –≤–∞–º!');
    return;
  }

  // –î–æ–±–∞–≤–∏–º –≤ —Ç–∞–±–ª–∏—Ü—É
  await addTaskToSheet(user, message, false);

  // –û—Ç–≤–µ—Ç AI
  const aiReply = await askAI(message);
  ctx.reply(aiReply);

  // –ó–∞–ø–∏—à–µ–º –æ—Ç–≤–µ—Ç AI —Ç–æ–∂–µ
  await addTaskToSheet('AI', aiReply, true);
});

bot.launch();
console.log('‚úÖ AI-CEO –±–æ—Ç –∑–∞–ø—É—â–µ–Ω!');